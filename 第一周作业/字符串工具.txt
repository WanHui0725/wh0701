package World;

import java.math.BigDecimal;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Arrays;
public class Wh {
    public static void main(String[] args) {
        String []x=new String[]{"acbdw", "1269547", "AASIDX", "AIUydjs", "12sjaA", "3819247", "ausSHSzio", "IUFISsi"};
        for (int i=0;i<x.length;i++)
        {
            int j=i+1;
            System.out.print("第"+j+"个字符串");
            if(checkStrIsNumber(x[i])==true){
                System.out.print("全是数字  ");
                Integer b=new Integer(x[i]);
                int []a={b%10000000/1000000,b%1000000/100000,b%100000/10000,b%10000/1000,b%1000/100,b%100/10,b%10};
                Arrays.sort(a);
                System.out.print("按照升序后该数组为:");
                for(int num :a) {
                    System.out.print(""+num);
                }
                System.out.println();
            }
            if((checkStrIsEnglish(x[i])==true)&&(checkStrIsNumber(x[i])==false))
            {
                if(xiaoxie(x[i])==true)
                    System.out.println("全是小写英文字母");
                if(daxie(x[i])==true)
                    System.out.println("全是大写英文字母");
                if((xiaoxie(x[i])==false)&&(daxie(x[i])==false)) {
                    System.out.println("大小写字母混合");
                    System.out.print("将小写转换为大写后为:");
                    char []arr=x[i].toCharArray();
                    for(int p=0;p<arr.length;p++){
                        if((int)arr[p]>=97&&(int)arr[p]<=122){
                            arr[p]-=32;
                        }
                    }
                    for(int m=0;m<arr.length;m++){
                        System.out.print(arr[m]+"");
                    }
                    System.out.println();
                }
            }
            if((checkStrIsEnglish(x[i])==false)&&(checkStrIsNumber(x[i])==false)){
                System.out.println("这是数字与英文混合体");
            }
        }
    }
    private static Pattern number=Pattern.compile("-?[0-9]+(\\.[0-9]+)?");//利用正则表达式来判断字符串是否全为数字;
    public static boolean checkStrIsNumber(String str){
        String Str;
        try{
            Str=new BigDecimal(str).toString();
        }catch (Exception e) {
            return false;
        }
        Matcher isNum=number.matcher(str);
        if(!isNum.matches()){
            return false;
        }
        return true;
    }
    public static boolean checkStrIsEnglish(String str) {
        boolean Is=true;
        for(int i=0;i<str.length();i++) {
            char c = str.charAt(i);
            if (((c < 'a' || c > 'z') && (c < 'A' || c > 'Z'))) {
                Is=false;
            }
        }
        if(Is==true)
            return true;
        else
            return false;
    }
    public static boolean xiaoxie(String str) {
        boolean Is=true;
        for(int i=0;i<str.length();i++) {
            char c = str.charAt(i);
            if ((c <'a') || (c > 'z')) {
                Is=false;
            }
        }
        if(Is==true)
            return true;
        else
            return false;
    }
    public static boolean daxie(String str) {
        boolean Is=true;
        for(int i=0;i<str.length();i++) {
            char c = str.charAt(i);
            if ((c < 'A') || (c > 'Z')) {
                Is=false;
            }
        }
        if(Is==true)
            return true;
        else
            return false;
    }
}
//写了几个小时，查了不少。链接太多就不放了.