package World;

import java.util.Scanner;

public class Wh {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("请输入算式:");
        String str = input.next();
        if (isNumber(str) == true) {
            System.out.println("你输入的算式有问题哦~");
            System.out.println("请重新输入~");
        }
        else
            System.out.println(getResult(str));
    }
    private static boolean isNumber(String str) {
        for (int i = 0; i < str.length(); i++) {
            if (!Character.isDigit(str.charAt(i)) && str.charAt(i) != '.' && str.charAt(i) != ' ') {
                return false;
            }
        }
        return true;
    }
    public static Double getResult(String str) {
        // 递归头
        if (str.isEmpty() || isNumber(str)) {
            return str.isEmpty() ? 0 : Double.parseDouble(str);//三元运算符
        }
        //递归体
        if (str.contains(")")) {//str.contains的用法是判断字符串里有无这个符号，此处判断有无")"
            // 最后一个左括号
            int lIndex = str.lastIndexOf("(");
            // 对于的右括号
            int rIndex = str.indexOf(")", lIndex);
            return getResult(str.substring(0, lIndex) + getResult(str.substring(lIndex + 1, rIndex)) + str.substring(rIndex + 1));
        }
        if (str.contains("+")) {
            int index = str.lastIndexOf("+");
            return getResult(str.substring(0, index)) + getResult(str.substring(index + 1));
        }
        if (str.contains("-")) {
            int index = str.lastIndexOf("-");
            return getResult(str.substring(0, index)) - getResult(str.substring(index + 1));
        }
        if (str.contains("*")) {
            int index = str.lastIndexOf("*");
            return getResult(str.substring(0, index)) * getResult(str.substring(index + 1));
        }
        if (str.contains("/")) {
            int index = str.lastIndexOf("/");
            return getResult(str.substring(0, index)) / getResult(str.substring(index + 1));
        }
        // 出错
        return null;
    }
}
/*原文链接：https://blog.csdn.net/leinminna/article/details/100180546
稍微加改动，自认为以几天的基础单独完成这个任务不太可能，在csdn上搜的代码看懂了后转过来的
 */